import { ConditionTree, Projection, Sort } from '@forestadmin/datasource-toolkit';
import { IncludeOptions, ModelDefined, OrderItem, WhereOptions } from 'sequelize';
export default class QueryConverter {
    private model;
    private dialect;
    private col;
    private fn;
    private where;
    constructor(model: ModelDefined<unknown, unknown>);
    private asArray;
    private makeWhereClause;
    getWhereFromConditionTreeToByPassInclude(conditionTree?: ConditionTree): Promise<WhereOptions>;
    getWhereFromConditionTree(conditionTree?: ConditionTree): WhereOptions;
    private computeIncludeFromProjection;
    getIncludeFromProjection(projection: Projection): IncludeOptions[];
    getIncludeWithAttributesFromProjection(projection: Projection): IncludeOptions[];
    getOrderFromSort(sort: Sort): OrderItem[];
}
//# sourceMappingURL=query-converter.d.ts.map